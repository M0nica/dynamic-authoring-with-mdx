{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Dev/migrating-to-mdx/layouts/SlidePage.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Swipeable } from 'react-swipeable';\nimport { useRouter } from 'next/router';\nimport { createGlobalStyle } from 'styled-components';\nimport Slide from '../components/Slide';\nimport PresentationMode from '../components/PresentationMode';\nimport useEventListener from '../hooks/useEventListener';\nimport { useTotalPages } from '../context/TotalPagesContext';\nimport { useMode } from '../context/ModeContext';\nimport { useCurrentSlide } from '../context/CurrentSlideContext';\nimport { Storage } from '../hooks/useStorage';\nimport { MODES } from '../constants/modes';\nconst eggplant = '#2a2135';\nconst white = '#fbf4ff';\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --text: #2a2135;\n    --meta: #b4aaff;\n    --accent: rgb(0, 92, 221);\n    --bg: #fbf4ff;\n    --base: 1.5rem;\n    --code: 1rem;\n    --heading-font-family: \"Poppins\";\n    --heading-font-weight: 800;\n  }\n\n  @media (max-width: 600px) {\n    :root {\n      --base: 1.2rem;\n    }\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  body,\n  html {\n    font-family: \"Roboto\", -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial,\n      sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n    font-size: var(--base);\n    -webkit-font-smoothing: antialiased;\n    font-feature-settings: 'calt', 'liga', 'hist', 'onum', 'pnum';\n\n    overflow: auto;\n\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n\n    color: var(--text);\n    background-color: var(--bg);\n  }\n\n  #slide {\n    display: flex;\n    overflow: hidden;\n    justify-content: center;\n    align-items: center;\n\n    width: 100vw;\n    height: 100vh;\n    padding: 1rem;\n\n    text-align: center;\n\n    -webkit-overflow-scrolling: touch;\n  }\n\n  #slide ul,\n  #slide ol {\n      text-align: left;\n      margin-left: 32px;\n  }\n\n  #slide ol {\n    list-style: none;\n    counter-reset: slide-ol-counter;\n  }\n\n  #slide ol li {\n    counter-increment: slide-ol-counter;\n    margin-bottom:0.5em;\n  }\n\n  #slide ol li::before {\n    content: \"0\" counter(slide-ol-counter) \".\";\n    font-weight: bold;\n    font-size: 2rem;\n    margin-right: 0.5rem;\n    letter-spacing:1px;\n    font-family: var(--heading-font-family);\n    line-height: 1;\n    position:relative;\n    top:0.1em;\n}\n\n  a {\n    color: var(--text);\n\n    text-decoration-skip-ink: auto;\n  }\n\n  blockquote {\n    font-size: 120%;\n    font-weight: bold;\n\n    width: 50vw;\n\n    text-align: left;\n  }\n\n  @media (max-width: 900px) {\n    blockquote {\n      width: 90vw;\n    }\n  }\n\n  blockquote div::before {\n    content: '\\\\201C';\n  }\n\n  blockquote div::after {\n    content: '\\\\201D';\n  }\n\n  cite {\n    font-size: 80%;\n    font-weight: normal;\n    font-style: normal;\n\n    display: block;\n\n    margin-top: 2rem;\n  }\n\n  cite::before {\n    content: '\\\\2014\\\\00a0';\n  }\n\n  pre {\n    font-size: 0.75em !important;\n\n    display: inline-block;\n    overflow-x: scroll;\n\n    margin: 2rem 0;\n\n    text-align: left;\n\n    color: var(--accent);\n  }\n\n  code {\n    font-family: menlo, monospace;\n  }\n\n  a:hover {\n    color: var(--accent);\n  }\n\n  h1 {\n    font-family: var(--heading-font-family);\n    font-weight: var(--heading-font-weight);\n    font-size: 200%;\n\n    margin-bottom: 0.5rem;\n  }\n\n  h2 {\n    font-family: var(--heading-font-family);\n    font-weight: var(--heading-font-weight);\n    font-size: 120%;\n\n    margin-bottom: 0.5rem;\n  }\n\n  p {\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n  }\n\n  header {\n    font-size: 50%;\n\n    position: fixed;\n    top: 0;\n    left: 0;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    width: 100%;\n    padding: 20px;\n\n    user-select: none;\n  }\n\n  header a,\n  time {\n    text-decoration: none;\n\n    color: var(--meta);\n  }\n\n  header a:hover {\n    color: var(--meta);\n  }\n\n  header span {\n    color: var(--text);\n  }\n`;\nexport default function SlidePage({\n  children\n}) {\n  const {\n    currentSlide,\n    setSlide\n  } = useCurrentSlide();\n  const router = useRouter();\n  const totalPages = useTotalPages();\n  const {\n    mode,\n    setMode\n  } = useMode();\n  const NEXT = [13, 32, 39];\n  const PREV = 37;\n  const PRESENTER = 80;\n  let slideCount = 0;\n\n  const navigate = ({\n    keyCode,\n    altKey\n  }) => {\n    // Handle Presentation Mode shortcut\n    if (altKey) {\n      if (keyCode === PRESENTER) {\n        if (mode === MODES.SPEAKER) {\n          setMode(MODES.SLIDESHOW);\n          router.push(router.pathname, `/slides/${router.query.slide}?mode=${MODES.SLIDESHOW}#${currentSlide}`, {\n            shallow: true\n          });\n        } else {\n          setMode(MODES.SPEAKER);\n          router.push(router.pathname, `/slides/${router.query.slide}?mode=${MODES.SPEAKER}#${currentSlide}`, {\n            shallow: true\n          });\n        }\n\n        return false;\n      }\n    } // Handle Previous page\n\n\n    if (keyCode === PREV && currentSlide === 0) {\n      if (router.query && router.query.slide) {\n        if (router.query.slide > 1) {\n          router.push(`/slides/${parseInt(router.query.slide, 10) - 1}?mode=${mode}#999`);\n        }\n      }\n\n      return false;\n    } // Handle next page\n\n\n    if (NEXT.indexOf(keyCode) !== -1 && currentSlide === slideCount) {\n      if (router.query && router.query.slide) {\n        // Check for max page count\n        if (router.query.slide < totalPages) {\n          router.push(`/slides/${parseInt(router.query.slide, 10) + 1}?mode=${mode}`);\n        }\n      }\n\n      return false;\n    } // Handle slide changes\n\n\n    if (NEXT.indexOf(keyCode) !== -1) {\n      setSlide(prevState => {\n        router.push(`${router.pathname}`, `/slides/${router.query.slide}?mode=${mode}#${prevState + 1}`);\n        return prevState + 1;\n      });\n    } else if (keyCode === PREV) {\n      setSlide(prevState => {\n        router.push(`${router.pathname}`, `/slides/${router.query.slide}?mode=${mode}#${prevState - 1}`);\n        return prevState - 1;\n      });\n    }\n  };\n\n  useEventListener('keydown', navigate);\n\n  const swipeLeft = () => {\n    navigate({\n      keyCode: NEXT[0]\n    });\n  };\n\n  const swipeRight = () => {\n    navigate({\n      keyCode: PREV\n    });\n  };\n\n  const slideNotes = () => {\n    let generatorCount = 0;\n    let generatedNotes = []; // Filter down children by only Slides\n\n    React.Children.map(children, child => {\n      // Check for <hr> element to separate slides\n      const childType = child && child.props && (child.props.mdxType || []);\n\n      if (childType && childType.includes('hr')) {\n        generatorCount += 1;\n        return;\n      } // Check if it's a SpeakerNotes component\n\n\n      if (childType && childType.includes('SpeakerNotes')) {\n        if (!Array.isArray(generatedNotes[generatorCount])) {\n          generatedNotes[generatorCount] = [];\n        }\n\n        generatedNotes[generatorCount].push(child);\n      }\n    });\n    return generatedNotes;\n  };\n\n  const renderSlide = () => {\n    let generatedSlides = [];\n    let generatorCount = 0; // Filter down children by only Slides\n\n    React.Children.map(children, child => {\n      // Check for <hr> element to separate slides\n      const childType = child && child.props && (child.props.mdxType || []);\n\n      if (childType && childType.includes('hr')) {\n        generatorCount += 1;\n        return;\n      } // Check if it's a SpeakerNotes component\n\n\n      if (childType && !childType.includes('SpeakerNotes')) {\n        // Add slide content to current generated slide\n        if (!Array.isArray(generatedSlides[generatorCount])) {\n          generatedSlides[generatorCount] = [];\n        }\n\n        generatedSlides[generatorCount].push(child);\n      }\n    }); // Get total slide count\n\n    slideCount = generatorCount; // Return current slide\n\n    if (currentSlide === 999) {\n      router.push(router.pathname, `/slides/${router.query.slide}?mode=${mode}#${slideCount}`, {\n        shallow: true\n      });\n      setSlide(slideCount);\n    }\n\n    return __jsx(Slide, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 12\n      }\n    }, generatedSlides[currentSlide]);\n  };\n\n  return __jsx(Swipeable, {\n    onSwipedLeft: swipeLeft,\n    onSwipedRight: swipeRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 5\n    }\n  }, __jsx(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }\n  }), __jsx(Storage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 7\n    }\n  }), __jsx(PresentationMode, {\n    mode: mode,\n    notes: slideNotes(),\n    currentSlide: currentSlide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    id: \"slide\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }\n  }, renderSlide())));\n}","map":{"version":3,"sources":["/Users/monica/Dev/migrating-to-mdx/layouts/SlidePage.jsx"],"names":["React","Swipeable","useRouter","createGlobalStyle","Slide","PresentationMode","useEventListener","useTotalPages","useMode","useCurrentSlide","Storage","MODES","eggplant","white","GlobalStyle","SlidePage","children","currentSlide","setSlide","router","totalPages","mode","setMode","NEXT","PREV","PRESENTER","slideCount","navigate","keyCode","altKey","SPEAKER","SLIDESHOW","push","pathname","query","slide","shallow","parseInt","indexOf","prevState","swipeLeft","swipeRight","slideNotes","generatorCount","generatedNotes","Children","map","child","childType","props","mdxType","includes","Array","isArray","renderSlide","generatedSlides","width"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Swipeable } from 'react-swipeable'\nimport { useRouter } from 'next/router'\nimport { createGlobalStyle } from 'styled-components'\nimport Slide from '../components/Slide'\nimport PresentationMode from '../components/PresentationMode'\nimport useEventListener from '../hooks/useEventListener'\nimport { useTotalPages } from '../context/TotalPagesContext'\nimport { useMode } from '../context/ModeContext'\nimport { useCurrentSlide } from '../context/CurrentSlideContext'\nimport { Storage } from '../hooks/useStorage'\nimport { MODES } from '../constants/modes'\n\nconst eggplant = '#2a2135'\nconst white = '#fbf4ff'\n\nconst GlobalStyle = createGlobalStyle`\n  :root {\n    --text: #2a2135;\n    --meta: #b4aaff;\n    --accent: rgb(0, 92, 221);\n    --bg: #fbf4ff;\n    --base: 1.5rem;\n    --code: 1rem;\n    --heading-font-family: \"Poppins\";\n    --heading-font-weight: 800;\n  }\n\n  @media (max-width: 600px) {\n    :root {\n      --base: 1.2rem;\n    }\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  body,\n  html {\n    font-family: \"Roboto\", -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial,\n      sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n    font-size: var(--base);\n    -webkit-font-smoothing: antialiased;\n    font-feature-settings: 'calt', 'liga', 'hist', 'onum', 'pnum';\n\n    overflow: auto;\n\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n\n    color: var(--text);\n    background-color: var(--bg);\n  }\n\n  #slide {\n    display: flex;\n    overflow: hidden;\n    justify-content: center;\n    align-items: center;\n\n    width: 100vw;\n    height: 100vh;\n    padding: 1rem;\n\n    text-align: center;\n\n    -webkit-overflow-scrolling: touch;\n  }\n\n  #slide ul,\n  #slide ol {\n      text-align: left;\n      margin-left: 32px;\n  }\n\n  #slide ol {\n    list-style: none;\n    counter-reset: slide-ol-counter;\n  }\n\n  #slide ol li {\n    counter-increment: slide-ol-counter;\n    margin-bottom:0.5em;\n  }\n\n  #slide ol li::before {\n    content: \"0\" counter(slide-ol-counter) \".\";\n    font-weight: bold;\n    font-size: 2rem;\n    margin-right: 0.5rem;\n    letter-spacing:1px;\n    font-family: var(--heading-font-family);\n    line-height: 1;\n    position:relative;\n    top:0.1em;\n}\n\n  a {\n    color: var(--text);\n\n    text-decoration-skip-ink: auto;\n  }\n\n  blockquote {\n    font-size: 120%;\n    font-weight: bold;\n\n    width: 50vw;\n\n    text-align: left;\n  }\n\n  @media (max-width: 900px) {\n    blockquote {\n      width: 90vw;\n    }\n  }\n\n  blockquote div::before {\n    content: '\\\\201C';\n  }\n\n  blockquote div::after {\n    content: '\\\\201D';\n  }\n\n  cite {\n    font-size: 80%;\n    font-weight: normal;\n    font-style: normal;\n\n    display: block;\n\n    margin-top: 2rem;\n  }\n\n  cite::before {\n    content: '\\\\2014\\\\00a0';\n  }\n\n  pre {\n    font-size: 0.75em !important;\n\n    display: inline-block;\n    overflow-x: scroll;\n\n    margin: 2rem 0;\n\n    text-align: left;\n\n    color: var(--accent);\n  }\n\n  code {\n    font-family: menlo, monospace;\n  }\n\n  a:hover {\n    color: var(--accent);\n  }\n\n  h1 {\n    font-family: var(--heading-font-family);\n    font-weight: var(--heading-font-weight);\n    font-size: 200%;\n\n    margin-bottom: 0.5rem;\n  }\n\n  h2 {\n    font-family: var(--heading-font-family);\n    font-weight: var(--heading-font-weight);\n    font-size: 120%;\n\n    margin-bottom: 0.5rem;\n  }\n\n  p {\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n  }\n\n  header {\n    font-size: 50%;\n\n    position: fixed;\n    top: 0;\n    left: 0;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    width: 100%;\n    padding: 20px;\n\n    user-select: none;\n  }\n\n  header a,\n  time {\n    text-decoration: none;\n\n    color: var(--meta);\n  }\n\n  header a:hover {\n    color: var(--meta);\n  }\n\n  header span {\n    color: var(--text);\n  }\n`\n\nexport default function SlidePage({ children }) {\n  const { currentSlide, setSlide } = useCurrentSlide()\n  const router = useRouter()\n  const totalPages = useTotalPages()\n  const { mode, setMode } = useMode()\n\n  const NEXT = [13, 32, 39]\n  const PREV = 37\n  const PRESENTER = 80\n  let slideCount = 0\n\n  const navigate = ({ keyCode, altKey }) => {\n    // Handle Presentation Mode shortcut\n    if (altKey) {\n      if (keyCode === PRESENTER) {\n        if (mode === MODES.SPEAKER) {\n          setMode(MODES.SLIDESHOW)\n          router.push(\n            router.pathname,\n            `/slides/${router.query.slide}?mode=${MODES.SLIDESHOW}#${currentSlide}`,\n            { shallow: true }\n          )\n        } else {\n          setMode(MODES.SPEAKER)\n          router.push(\n            router.pathname,\n            `/slides/${router.query.slide}?mode=${MODES.SPEAKER}#${currentSlide}`,\n            { shallow: true }\n          )\n        }\n        return false\n      }\n    }\n\n    // Handle Previous page\n    if (keyCode === PREV && currentSlide === 0) {\n      if (router.query && router.query.slide) {\n        if (router.query.slide > 1) {\n          router.push(\n            `/slides/${parseInt(router.query.slide, 10) - 1}?mode=${mode}#999`\n          )\n        }\n      }\n      return false\n    }\n\n    // Handle next page\n    if (NEXT.indexOf(keyCode) !== -1 && currentSlide === slideCount) {\n      if (router.query && router.query.slide) {\n        // Check for max page count\n        if (router.query.slide < totalPages) {\n          router.push(\n            `/slides/${parseInt(router.query.slide, 10) + 1}?mode=${mode}`\n          )\n        }\n      }\n      return false\n    }\n\n    // Handle slide changes\n    if (NEXT.indexOf(keyCode) !== -1) {\n      setSlide((prevState) => {\n        router.push(\n          `${router.pathname}`,\n          `/slides/${router.query.slide}?mode=${mode}#${prevState + 1}`\n        )\n        return prevState + 1\n      })\n    } else if (keyCode === PREV) {\n      setSlide((prevState) => {\n        router.push(\n          `${router.pathname}`,\n          `/slides/${router.query.slide}?mode=${mode}#${prevState - 1}`\n        )\n        return prevState - 1\n      })\n    }\n  }\n\n  useEventListener('keydown', navigate)\n\n  const swipeLeft = () => {\n    navigate({ keyCode: NEXT[0] })\n  }\n\n  const swipeRight = () => {\n    navigate({ keyCode: PREV })\n  }\n\n  const slideNotes = () => {\n    let generatorCount = 0\n    let generatedNotes = []\n    // Filter down children by only Slides\n    React.Children.map(children, (child) => {\n      // Check for <hr> element to separate slides\n      const childType = child && child.props && (child.props.mdxType || [])\n      if (childType && childType.includes('hr')) {\n        generatorCount += 1\n        return\n      }\n      // Check if it's a SpeakerNotes component\n      if (childType && childType.includes('SpeakerNotes')) {\n        if (!Array.isArray(generatedNotes[generatorCount])) {\n          generatedNotes[generatorCount] = []\n        }\n        generatedNotes[generatorCount].push(child)\n      }\n    })\n    return generatedNotes\n  }\n\n  const renderSlide = () => {\n    let generatedSlides = []\n    let generatorCount = 0\n\n    // Filter down children by only Slides\n    React.Children.map(children, (child) => {\n      // Check for <hr> element to separate slides\n      const childType = child && child.props && (child.props.mdxType || [])\n      if (childType && childType.includes('hr')) {\n        generatorCount += 1\n        return\n      }\n\n      // Check if it's a SpeakerNotes component\n      if (childType && !childType.includes('SpeakerNotes')) {\n        // Add slide content to current generated slide\n        if (!Array.isArray(generatedSlides[generatorCount])) {\n          generatedSlides[generatorCount] = []\n        }\n        generatedSlides[generatorCount].push(child)\n      }\n    })\n\n    // Get total slide count\n    slideCount = generatorCount\n\n    // Return current slide\n    if (currentSlide === 999) {\n      router.push(\n        router.pathname,\n        `/slides/${router.query.slide}?mode=${mode}#${slideCount}`,\n        { shallow: true }\n      )\n      setSlide(slideCount)\n    }\n    return <Slide>{generatedSlides[currentSlide]}</Slide>\n  }\n\n  return (\n    <Swipeable onSwipedLeft={swipeLeft} onSwipedRight={swipeRight}>\n      <GlobalStyle />\n      <Storage />\n      <PresentationMode\n        mode={mode}\n        notes={slideNotes()}\n        currentSlide={currentSlide}\n      >\n        <div id=\"slide\" style={{ width: '100%' }}>\n          {renderSlide()}\n        </div>\n      </PresentationMode>\n    </Swipeable>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}