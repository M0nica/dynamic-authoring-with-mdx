{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Dev/migrating-to-mdx/slides/2.mdx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 14\n    }\n  }));\n};\n\nconst SlidePage = makeShortcode(\"SlidePage\");\nconst layoutProps = {};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }), mdx(SlidePage, {\n    mdxType: \"SlidePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, mdx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, `Elevate authoring with components`), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, `Using MDX you can use components alongside your Markdown, like React or Web Components.`), mdx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), mdx(\"button\", {\n    style: {\n      backgroundColor: \"transparent\",\n      color: \"#FFF\",\n      border: \"3px solid #FFF\",\n      borderRadius: \"6px\",\n      padding: \"1.5em 2em\",\n      fontSize: \"1em\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Button with JSX\"), mdx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, `Source of the last slide`), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }\n  }), `<button \n    style={{\n        backgroundColor:\"transparent\", \n        color: \"#FFF\", \n        border: \"3px solid #FFF\", \n        borderRadius: \"6px\", \n        padding: \"1.5em 2em\",\n        fontSize: \"1em\"\n    }}\n>Button with JSX</button>\n`)), mdx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, `Use other components by adding to `, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 48\n    }\n  }, `<MDXProvider>`)), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }\n  }), `const mdComponents = {\n  h1: (props) => <Heading as=\"h1\" {...props} />,\n}\n`)), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://mdxjs.com/getting-started#mdxprovider\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }), `Check out the docs here`)), mdx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, `Having issues?`), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, mdx(\"strong\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }, `Check your syntax.`), ` `, mdx(\"em\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 89\n    }\n  }, `JSX doesn't like things like unclosed tags.`), ` `), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, mdx(\"strong\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, `Clear the cache and restart the server.`), ` `, mdx(\"em\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 110\n    }\n  }, `MDX is like that sometimes.`)), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, mdx(\"strong\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 29\n    }\n  }, `Check the MDX docs`), `. `, mdx(\"em\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 90\n    }\n  }, `It's next level stuff.`)))));\n}\n;\nMDXContent.isMDXComponent = true;","map":{"version":3,"sources":["/Users/monica/Dev/migrating-to-mdx/slides/2.mdx"],"names":["React","mdx","makeShortcode","name","MDXDefaultShortcode","props","console","warn","SlidePage","layoutProps","MDXLayout","MDXContent","components","backgroundColor","color","border","borderRadius","padding","fontSize","isMDXComponent"],"mappings":";;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA;;AAGA,MAAMC,aAAa,GAAGC,IAAI,IAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAC5DC,EAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,SAAO,wBAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAHL;;AAIA,MAAMG,SAAS,GAAGN,aAAa,CAAC,WAAD,CAA/B;AACA,MAAMO,WAAW,GAAG,EAApB;AAGA,MAAMC,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAHgC;AACjCC,IAAAA;AADiC,GAGhC;AAAA,MADEP,KACF;;AACD,SAAO,IAAC,SAAD,eAAeI,WAAf,EAAgCJ,KAAhC;AAAuC,IAAA,UAAU,EAAEO,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACL,IAAC,SAAD;AAAW,IAAA,OAAO,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,mCAAN,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,yFAAL,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAQ,IAAA,KAAK,EAAE;AACbC,MAAAA,eAAe,EAAE,aADJ;AAEbC,MAAAA,KAAK,EAAE,MAFM;AAGbC,MAAAA,MAAM,EAAE,gBAHK;AAIbC,MAAAA,YAAY,EAAE,KAJD;AAKbC,MAAAA,OAAO,EAAE,WALI;AAMbC,MAAAA,QAAQ,EAAE;AANG,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,0BAAN,CAbF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEE;;;;;;;;;;CAFF,CAAL,CAdF,EA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,oCAAL,EAAyC;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B,eAA7B,CAAzC,CA5BF,EA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC5B,iBAAa;AADe,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEE;;;CAFF,CAAL,CA7BF,EAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAG,IAAA,UAAU,EAAC;AAAd,KAAsB;AACrB,YAAQ;AADa,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEI,yBAFJ,CAAH,CAnCF,EAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtCF,EAuCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,gBAAN,CAvCF,EAwCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAQ,IAAA,UAAU,EAAC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0B,oBAA1B,CAApB,EAA6E,GAA7E,EAAgF;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB,6CAAtB,CAAhF,EAA0J,GAA1J,CADF,EAEE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAQ,IAAA,UAAU,EAAC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0B,yCAA1B,CAApB,EAAkG,GAAlG,EAAqG;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB,6BAAtB,CAArG,CAFF,EAGE;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAQ,IAAA,UAAU,EAAC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0B,oBAA1B,CAApB,EAA6E,IAA7E,EAAiF;AAAI,IAAA,UAAU,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB,wBAAtB,CAAjF,CAHF,CAxCF,CADK,CAAP;AAgDD;AAED;AACAP,UAAU,CAACQ,cAAX,GAA4B,IAA5B","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst SlidePage = makeShortcode(\"SlidePage\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <SlidePage mdxType=\"SlidePage\">\n      <h1>{`Elevate authoring with components`}</h1>\n      <p>{`Using MDX you can use components alongside your Markdown, like React or Web Components.`}</p>\n      <hr></hr>\n      <button style={{\n        backgroundColor: \"transparent\",\n        color: \"#FFF\",\n        border: \"3px solid #FFF\",\n        borderRadius: \"6px\",\n        padding: \"1.5em 2em\",\n        fontSize: \"1em\"\n      }}>Button with JSX</button>\n      <hr></hr>\n      <h2>{`Source of the last slide`}</h2>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`<button \n    style={{\n        backgroundColor:\"transparent\", \n        color: \"#FFF\", \n        border: \"3px solid #FFF\", \n        borderRadius: \"6px\", \n        padding: \"1.5em 2em\",\n        fontSize: \"1em\"\n    }}\n>Button with JSX</button>\n`}</code></pre>\n      <hr></hr>\n      <p>{`Use other components by adding to `}<inlineCode parentName=\"p\">{`<MDXProvider>`}</inlineCode></p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`const mdComponents = {\n  h1: (props) => <Heading as=\"h1\" {...props} />,\n}\n`}</code></pre>\n      <p><a parentName=\"p\" {...{\n          \"href\": \"https://mdxjs.com/getting-started#mdxprovider\"\n        }}>{`Check out the docs here`}</a></p>\n      <hr></hr>\n      <h2>{`Having issues?`}</h2>\n      <ul>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`Check your syntax.`}</strong>{` `}<em parentName=\"li\">{`JSX doesn't like things like unclosed tags.`}</em>{` `}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`Clear the cache and restart the server.`}</strong>{` `}<em parentName=\"li\">{`MDX is like that sometimes.`}</em></li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`Check the MDX docs`}</strong>{`. `}<em parentName=\"li\">{`It's next level stuff.`}</em></li>\n      </ul>\n    </SlidePage>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}