{"ast":null,"code":"var _jsxFileName = \"/Users/monica/Dev/migrating-to-mdx/context/CurrentSlideContext.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { createContext, useContext, useState } from 'react';\nexport const CurrentSlideContext = createContext({\n  currentSlide: 0,\n  setSlide: () => {}\n});\nexport function CurrentSlideProvider({\n  children\n}) {\n  // Grab initial slide from hash (#) in URL\n  const initialSlide = false && window.location.hash ? parseInt(window.location.hash.replace('#', '')) : 0;\n  const {\n    0: currentSlide,\n    1: setSlide\n  } = useState(initialSlide);\n  return __jsx(CurrentSlideContext.Provider, {\n    value: {\n      currentSlide,\n      setSlide\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport const useCurrentSlide = () => useContext(CurrentSlideContext);","map":{"version":3,"sources":["/Users/monica/Dev/migrating-to-mdx/context/CurrentSlideContext.jsx"],"names":["createContext","useContext","useState","CurrentSlideContext","currentSlide","setSlide","CurrentSlideProvider","children","initialSlide","window","location","hash","parseInt","replace","useCurrentSlide"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,OAAO,MAAMC,mBAAmB,GAAGH,aAAa,CAAC;AAC/CI,EAAAA,YAAY,EAAE,CADiC;AAE/CC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAF6B,CAAD,CAAzC;AAKP,OAAO,SAASC,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA4C;AACjD;AACA,QAAMC,YAAY,GAChB,SAAmBC,MAAM,CAACC,QAAP,CAAgBC,IAAnC,GACIC,QAAQ,CAACH,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBE,OAArB,CAA6B,GAA7B,EAAkC,EAAlC,CAAD,CADZ,GAEI,CAHN;AAIA,QAAM;AAAA,OAACT,YAAD;AAAA,OAAeC;AAAf,MAA2BH,QAAQ,CAACM,YAAD,CAAzC;AAEA,SACE,MAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AAAEJ,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,QADH,CADF;AAKD;AAED,OAAO,MAAMO,eAAe,GAAG,MAAMb,UAAU,CAACE,mBAAD,CAAxC","sourcesContent":["import { createContext, useContext, useState } from 'react'\n\nexport const CurrentSlideContext = createContext({\n  currentSlide: 0,\n  setSlide: () => {},\n})\n\nexport function CurrentSlideProvider({ children }) {\n  // Grab initial slide from hash (#) in URL\n  const initialSlide =\n    process.browser && window.location.hash\n      ? parseInt(window.location.hash.replace('#', ''))\n      : 0\n  const [currentSlide, setSlide] = useState(initialSlide)\n\n  return (\n    <CurrentSlideContext.Provider value={{ currentSlide, setSlide }}>\n      {children}\n    </CurrentSlideContext.Provider>\n  )\n}\n\nexport const useCurrentSlide = () => useContext(CurrentSlideContext)\n"]},"metadata":{},"sourceType":"module"}