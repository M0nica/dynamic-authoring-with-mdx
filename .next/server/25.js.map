{"version":3,"file":"25.js","sources":["webpack:///./slides/1.mdx"],"sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst SlidePage = makeShortcode(\"SlidePage\");\nconst Cover = makeShortcode(\"Cover\");\nconst SpeakerNotes = makeShortcode(\"SpeakerNotes\");\nconst Callout = makeShortcode(\"Callout\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <SlidePage mdxType=\"SlidePage\">\n      <Cover mdxType=\"Cover\">\n        <h1>{`Migrating Gatsby Blog to MDX üìù`}</h1>\n        <p>{`Monica Powell `}{`‚Ä¢`}{` MDX Conf 2020`}</p>\n      </Cover>\n      <hr></hr>\n      <h1>{`Hi, I'm Monica üëãüèæ`}</h1>\n      <p>{`I'm a software engineer who is passionate about making contributing to open-source more approachable, creating technology to elevate people, and building community. I recently started using MDX and am looking forward to sharing more about my MDX migration...`}</p>\n      <img style={{\n        maxWidth: \"20%\",\n        textAlign: \"center\",\n        display: \"inline\"\n      }} src=\"/animonica.png\" />\n      <SpeakerNotes mdxType=\"SpeakerNotes\">\n  {\" \"}\n  I'm Monica! I'm a software engineer and community organizer. I'm passionate\n  about making technology, like open-source, more accessible and created a\n  Meetup group, React Ladies for women and non-binary react developers.\n      </SpeakerNotes>\n      <hr></hr>\n      <p>{`I was happy with my Gatsby site with Remark plugins, so...`}</p>\n      <h1>{`Why did I migrated from Remark to MDX?`}</h1>\n      <ul>\n        <li parentName=\"ul\">{`FOMO Driven Development`}</li>\n        <li parentName=\"ul\">{`to create engaging and interactive content!`}</li>\n      </ul>\n      <SpeakerNotes mdxType=\"SpeakerNotes\">\n  Why not upgrade to MDX? I was hearing other developers talk about the\n  superpowers of MDX and wanted to check it out for myself. I was especially\n  interested in creating engaging and interactive content and had seen fun\n  examples of content that resonated with me that used MDX.\n      </SpeakerNotes>\n      <hr></hr>\n      <h1>{`Transformer Remark`}</h1>\n      <ul>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Remark is a collection of Markdown parser plugins that check, lint, generate and compiles Markdown.`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`In Gatsby, Remark Transformer plugins are used in the `}<inlineCode parentName=\"p\">{`gatsby-config`}</inlineCode>{` to transform\nMarkdown on a site into HTML.`}</p>\n        </li>\n      </ul>\n      <img style={{\n        maxWidth: \"50%\",\n        textAlign: \"center\"\n      }} src=\"/MDXtoHTML.png\" />\n      <hr></hr>\n      <h1>{`Remark plugins can be used to:`}</h1>\n      <ul>\n        <li parentName=\"ul\">{`autolink headers with anchor tags`}</li>\n        <li parentName=\"ul\">{`process responsive images`}</li>\n        <li parentName=\"ul\">{`add syntax highlight`}</li>\n        <li parentName=\"ul\">{`embed content`}</li>\n        <li parentName=\"ul\">{`and more!`}</li>\n      </ul>\n      <hr></hr>\n      <h1>{`Remark plugins can be used to:`}</h1>\n      <img style={{\n        maxWidth: \"50%\",\n        textAlign: \"center\"\n      }} src=\"/codepen-embed.png\" />\n      <hr></hr>\n      <h1>{`Remark plugins can be used to:`}</h1>\n      <img style={{\n        maxWidth: \"40%\",\n        textAlign: \"center\"\n      }} src=\"/tweet-embed.png\" />\n      <hr></hr>\n      <h1>{`Goodbye gatsby-transformer-remark, Hello gatsby-plugin-mdx üëãüèæ`}</h1>\n      <ul>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Gatsby-plugin-mdx is the official integration for using MDX with Gatsby`}</p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\">{`Can be used in combination with Remark plugins.`}</p>\n        </li>\n      </ul>\n      <SpeakerNotes mdxType=\"SpeakerNotes\">\n  {\" \"}\n  Considered a regular Gatsby plugin vs. Remark plugin{\" \"}\n      </SpeakerNotes>\n      <hr></hr>\n      <h1>{`What did migrating look like`}</h1>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-shell\"\n        }}>{`yarn add @mdx-js/mdx @mdx-js/react gatsby-plugin-mdx\nyarn remove gatsby-transformer-remark\n`}</code></pre>\n      <p>{`Updating `}<inlineCode parentName=\"p\">{`gatsby-config`}</inlineCode>{`:`}</p>\n      <ul>\n        <li parentName=\"ul\">{`replace `}<del parentName=\"li\">{`gatsby-transformer-remark`}</del>{` with `}<inlineCode parentName=\"li\">{`gatsby-plugin-mdx`}</inlineCode></li>\n        <li parentName=\"ul\">{`replace `}<del parentName=\"li\">{`gatsby-plugin-my-social-cards`}</del>{` with `}<inlineCode parentName=\"li\">{`gatsby-remark-twitter-cards`}</inlineCode></li>\n      </ul>\n      <hr></hr>\n      <h1>{`What did migrating look like`}</h1>\n      <p>{`Updating queries and references to Markdown nodes to replace references to `}<inlineCode parentName=\"p\">{`allMarkdownRemark`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`allMdx`}</inlineCode>{`:`}</p>\n      <ul>\n        <li parentName=\"ul\">\n          <p parentName=\"li\"><del parentName=\"p\"><inlineCode parentName=\"del\">{`const posts = result.data.allMarkdownRemark.edges`}</inlineCode></del>{` to\n`}<inlineCode parentName=\"p\">{`const posts = result.data.allMDX.edges`}</inlineCode></p>\n        </li>\n        <li parentName=\"ul\">\n          <p parentName=\"li\"><del parentName=\"p\"><inlineCode parentName=\"del\">{`node.internal.type ===`}</inlineCode>{`MarkdownRemark\\`\\``}</del>{` to `}<inlineCode parentName=\"p\">{`node.internal.type ===`}</inlineCode>{`Mdx\\`\\``}</p>\n        </li>\n      </ul>\n      <hr></hr>\n      <h1>{`Cannot Query Field ü§Ø`}</h1>\n      <Callout variant=\"danger\" mdxType=\"Callout\">\n  error Cannot query field \"body\" on type \"Mdx\". Did you mean \"rawBody\"?\n  graphql/template-strings\n      </Callout>\n      <p>{`After installing `}<inlineCode parentName=\"p\">{`gatsby-plugin-mdx`}</inlineCode>{` and updating all references to Markdown to MDX...`}</p>\n      <SpeakerNotes mdxType=\"SpeakerNotes\">\n  I ran into an error accessing some of the fields that should be available for\n  mdx nodes like `body`, `timeToRead` and `excerpt`.\n      </SpeakerNotes>\n      <hr></hr>\n      <h1>{`Debugging Conflicting Gatsby Plugins üïµüèæ‚Äç‚ôÄÔ∏è`}</h1>\n      <ol>\n        <li parentName=\"ol\">{`Commented out all of the plugins in gatsbyRemarkPlugins`}</li>\n        <li parentName=\"ol\">{`Confirmed that all of the data that should be available to query from mdx was available all gatsbyRemarkPlugins were (temporarily) removed`}</li>\n        <li parentName=\"ol\">{`Re-added each plugin one-by-one to identify the culprit`}</li>\n        <li parentName=\"ol\">{`Identified conflict between `}<inlineCode parentName=\"li\">{`gatsby-plugin-mdx`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`gatsby-plugin-my-social-cards`}</inlineCode>{`.`}</li>\n      </ol>\n      <hr></hr>\n      <h1>{`Resolving Conflicting Gatsby Plugins`}</h1>\n      <ul>\n        <li parentName=\"ul\">{`Plugins that transform the Abstract Syntax Tree (AST) can sometimes conflict with each other or behave in unexpected ways.`}</li>\n        <li parentName=\"ul\">{`Sometimes re-ordering plugins in `}<inlineCode parentName=\"li\">{`gatsby-config`}</inlineCode>{` can resolve conflicts.`}</li>\n      </ul>\n      <Callout mdxType=\"Callout\">\n  {\" \"}\n  Solution: replace gatsby-plugin-my-social-cards with\n  gatsby-remark-twitter-cards\n      </Callout>\n      <SpeakerNotes mdxType=\"SpeakerNotes\">\n  There was a conflict with `gatsby-plugin-mdx` and the plugin,\n  `gatsby-plugin-my-social-cards`, used to generate Open Graph images for all of\n  my posts.\n      </SpeakerNotes>\n      <hr></hr>\n      <h1>{`What have I done with MDX so far...`}</h1>\n      <ul>\n        <li parentName=\"ul\">{`‚ú® Upgraded ‚ú® components for code snippets and table of contents`}</li>\n        <li parentName=\"ul\">{`created additional Callout components to complement markdown quotes`}</li>\n        <li parentName=\"ul\">{`Added dynamic slider`}</li>\n      </ul>\n      <hr></hr>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`import { MDXProvider } from \"@mdx-js/react\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\n\nconst components = {\n  /* stash React components to be used in MDX blog posts here! */\n};\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.mdx;\n    if (!post) return null;\n\n    return (\n      <MDXProvider components={components}>\n        <MDXRenderer>{post.body}</MDXRenderer>\n      </MDXProvider>\n    );\n  }\n}\n`}</code></pre>\n      <SpeakerNotes mdxType=\"SpeakerNotes\">\n  But first we need to wrap the MDXProvider and MDXRenderer around blog posts\n      </SpeakerNotes>\n      <hr></hr>\n      <h1>{`Table of Contents Component`}</h1>\n      <img style={{\n        maxWidth: \"40%\",\n        textAlign: \"center\"\n      }} src=\"/table-of-contents-visual.png\" />\n      <hr></hr>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`import \"./TableOfContents.scss\";\nfunction TableOfContents({ headings }) {\n  return (\n    <div className=\"table-of-contents\">\n      <h2>Table of Contents</h2>\n      <ul>\n        {headings.items &&\n          headings.items.map((item) => (\n            <li key={item.url}>\n              <a href={item.url}>{item.title}</a>{\" \"}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n`}</code></pre>\n      <SpeakerNotes mdxType=\"SpeakerNotes\">\n  Create a Table of Contents JSX component to map through all of the headers and\n  display them as list items with links. There's an autolink plugin to ensure\n  the anchor link exists.\n      </SpeakerNotes>\n      <hr></hr>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`import { MDXProvider } from \"@mdx-js/react\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport TableOfContents from \"../components/TableOfContents\";\n\nconst components = {\n  TableOfContents,\n};\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.mdx;\n    if (!post) return null;\n\n    return (\n      <MDXProvider components={components}>\n        <MDXRenderer>{post.body}</MDXRenderer>\n      </MDXProvider>\n    );\n  }\n}\n`}</code></pre>\n      <SpeakerNotes mdxType=\"SpeakerNotes\">\n  We need to import the new Table of Contents component into the MDX provider,\n  if we want this component to be accessible to all blog posts\n      </SpeakerNotes>{\" \"}\n      <hr></hr>\n      <h1>{`Before/After: Table of Contents Component`}</h1>\n      <img style={{\n        maxWidth: \"80%\",\n        textAlign: \"center\"\n      }} src=\"/toc-diff.png\" />\n      <hr></hr>\n      <h1>{`Callout Banners`}</h1>\n      <Callout mdxType=\"Callout\">Here's some important information for you to know!</Callout>\n      <Callout variant=\"danger\" mdxType=\"Callout\">Oops, there was an error</Callout>\n      <Callout variant=\"garden\" mdxType=\"Callout\">\n  That's all for now! ü•ï I am continuing to update this post, so check back\n  later!\n      </Callout>\n      <Callout variant=\"book\" mdxType=\"Callout\">\n  \"Here's a great quote from something I read recently.\n      </Callout>\n      <hr></hr>\n      <h1>{`Markdown Quote -> JSX Callout Banners`}</h1>\n      <pre><code parentName=\"pre\" {...{}}>{`> Markdown quote\n`}</code></pre>\n      <p>{`to`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`<>\n  <Callout>...</Callout>\n  <Callout variant=\"danger\">...</Callout>\n  <Callout variant=\"garden\">...</Callout>\n  <Callout variant=\"book\">...</Callout>\n</>\n`}</code></pre>\n      <hr></hr>\n      <h1>{`JSX Callout Variants`}</h1>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`const variantStyles = {\n  info: {\n    borderLeft: \"4px solid #b4aaff\",\n    backgroundColor: \"rgba(224, 226, 255, 0.5)\",\n    color: \"#2a2135\",\n  },\n  danger: {\n    borderLeft: \"4px solid #ff7828\",\n    backgroundColor: \"rgb(253, 236, 234)\",\n  },\n  garden: {\n    borderLeft: \"4px solid #72bc23\",\n    backgroundColor: \"rgb(249, 253, 234)\",\n  },\n  book: {\n    borderLeft: \"4px solid #44a9ba\",\n    backgroundColor: \"rgb(234, 248, 253);\",\n  },\n};\n`}</code></pre>\n      <hr></hr>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\"\n        }}>{`/* CSS file for pseudoclasses a.k.a emojis */\nimport styles from \"./callout.module.scss\"\nexport default function Callout({ variant = \"info\", children }) {\n  const classes = \\`\\${styles.infoBox} \\${styles[variant]}\\`;\n  const variantStyles = {\n    ...\n  };\n  return (\n    <aside\n      css={{\n       /* a bunch of default CSS*/\n        ...variantStyles[variant],\n      }}\n      className={classes}\n    >\n      {children}\n    </aside>\n  );\n}\n`}</code></pre>\n      <hr></hr>\n      <h1>{`Upgraded Cod Snippets`}</h1>\n      <p>{`I wanted to be able to easily add additional functionality to code snippets on my site like click to copy functionality`}</p>\n      <p>{`I was using `}<inlineCode parentName=\"p\">{`gatsby-remark-prismjs`}</inlineCode>{` and ran into some issue since currently additional support for PrismJS plugin environment variables is `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/gatsbyjs/gatsby/issues/20642\"\n        }}>{`in development`}</a>{`.`}</p>\n      <p>{`I decided to switch to `}<inlineCode parentName=\"p\">{`prism-react-renderer`}</inlineCode>{` in order to tap into the more robust functionality that‚Äôs available with React/MDX.`}</p>\n      <p>{`Prism-react-renderer is a lot more flexible than gatsby-remark-prismjs`}</p>\n      <blockquote>\n        <p parentName=\"blockquote\">{`I was wondering how certain websites are able to display language and copy to clipboard feature as seen in the photo below.`}</p>\n      </blockquote>\n      <ul>\n        <li parentName=\"ul\">{`Migrated from ‚Äúgatsby-remark-prismjs‚Äù to ‚Äúprism-react-renderer‚Äù: ‚Äú^1.1.1‚Äù (much fancier code snippets) üë®‚Äçüç≥ - `}<a parentName=\"li\" {...{\n            \"href\": \"https://github.com/M0nica/monica-site-playground/compare/improveCodeBlocks\"\n          }}>{`https://github.com/M0nica/monica-site-playground/compare/improveCodeBlocks`}</a>\n          {`[image:3B3BE6B0-1B59-45ED-AFBD-93321A20DC77-75650-0001FB2ED8820415/Screen_Shot_2020-07-24_at_11.30.27_PM.png][image:5528dbcb-fd05-487e-953b-3363b990a363-75650-0001fb2ed9318c60/screen_shot_2020-07-24_at_11.30.31_pm.png]`}</li>\n      </ul>\n      <p>{`[file:F5F1DD06-53F8-4737-8E89-2CCF805CB5F0-75650-0001FBA5BFC7F365/2020-07-25-upgrading-code-snippets-migrating-to-prism-react-renderer.md]`}</p>\n      <hr></hr>\n      <p>{`Things I want to explore in MDX:\nA production-focused playground for live editing React code. üëÄ\n`}<a parentName=\"p\" {...{\n          \"href\": \"https://formidable.com/open-source/react-live/\"\n        }}>{`https://formidable.com/open-source/react-live/`}</a></p>\n      <hr></hr>\n      <h1>{`Thank you üëãüèæ`}</h1>\n    </SlidePage>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AAFA;AADA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAFA;AAGA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAGA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAGA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAA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":""}